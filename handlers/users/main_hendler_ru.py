import logging
from data.config import GROUP_CHAT_ID
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from loader import dp, bot
from keyboards.default.main_btn_uz import main_menu_ru
from keyboards.default.lan_btn import menulan
from keyboards.default.contact_btn import contact_Btn
from states.Course_state_ru import Course_registration_ru
from keyboards.default.english_level import english_l_btn
from keyboards.default.math import math_l_btn_ru
from keyboards.inline.check_btn import tekshir_ru
import re
from datetime import datetime




PHONE_NUM = r'^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$'




@dp.message_handler(text = "üá∑üá∫ RU")
async def create_post(message: Message):
    await message.answer("<b>üá∫üáø SATashkent School </b>SATashkent School ‚Äì —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —à–∫–æ–ª –≤ –¢–∞—à–∫–µ–Ω—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –æ–±—É—á–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–µ SAT (Scholastic Aptitude Test). –≠–∫–∑–∞–º–µ–Ω SAT —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç –≤—Å–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —É—á–∏—Ç—å—Å—è –≤ –∫–æ–ª–ª–µ–¥–∂–µ –°–®–ê —Å —â–µ–¥—Ä–æ–π —Å—Ç–∏–ø–µ–Ω–¥–∏–µ–π. –ü–æ—ç—Ç–æ–º—É, –º—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–º–æ—á—å —ç—Ç–∏–º –ª—é–¥—è–º –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Ö —É—Å—Ç—Ä–µ–º–ª–µ–Ω–∏–π. \n–ù–∞—à–∞ —à–∫–æ–ª–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–∞—á–µ—Å—Ç–≤–æ.", reply_markup=main_menu_ru)


@dp.message_handler(text ='üîô –ù–∞–∑–∞–¥')
async def bot_start(message: types.Message):
    await message.answer(f"Choose your language!", reply_markup=menulan)


@dp.message_handler(text ='üí° –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å')
async def bot_start(message: types.Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    await message.answer("–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è", reply_markup=ReplyKeyboardRemove())
    await Course_registration_ru.fullname.set()


@dp.message_handler(state=Course_registration_ru.fullname)
async def answer_fullname(message: types.Message, state: FSMContext):
    fullname = message.text

    await state.update_data(
        {"name": fullname}
    )

    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.", reply_markup=contact_Btn)

    await Course_registration_ru.next()

@dp.message_handler(state=Course_registration_ru.contact, content_types="contact")
async def answer_fullname(message: types.Message, state: FSMContext):
    contact = message

    if contact.contact:
        # print(phone_num.contact)
        if re.search(PHONE_NUM, contact.contact.phone_number):
            await state.update_data(
                {"phone_number": contact.contact.phone_number}
            )
            await message.answer("–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ", reply_markup=english_l_btn)
            await Course_registration_ru.next()

    elif 'text' in contact:
        if re.search(PHONE_NUM, contact.text):

            await state.update_data(
                {"phone_number": contact.text}
            )
            await message.answer("–í–∞—à —É—Ä–æ–≤–µ–Ω—å –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ", reply_markup=english_l_btn)
            await Course_registration_ru.next()
        else:
            await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. , \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞!")
            await Course_registration_ru.contact.set()



    else:
        await message.answer("‚ùå –í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä. , \n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–Ω–æ–≤–∞!")
        await Course_registration_ru.contact.set()

@dp.message_handler(state=Course_registration_ru.english_level)
async def answer_fullname(message: types.Message, state: FSMContext):
    english = message.text
    await state.update_data(
        {"english": english}
    )
    await message.answer("–í–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ", reply_markup=math_l_btn_ru)

    await Course_registration_ru.next()

@dp.message_handler(state=Course_registration_ru.math_level)
async def answer_fullname(message: types.Message, state: FSMContext):
    math = message.text
    await state.update_data(
        {"math": math}
    )


    data = await state.get_data()
    name = data.get("name")
    phone_number = data.get("phone_number")
    english = data.get("english")
    math = data.get("math")

    today = datetime.today()
    day = f"{today.strftime('%d')}/{today.strftime('%m')}/{today.strftime('%y')}"

    global _ru

    _ru = "üìå –í–∞—à–∞ –ª–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è! \n\n"
    _ru += f"<b>Full name</b>: {name}\n"
    _ru += f"<b>Phone Number</b>:{phone_number}\n"
    _ru += f"<b>English level</b>:{english}\n"
    _ru += f"<b>Math level</b>:{math}\n"
    _ru += f"<b>Date</b> :{day}\n"
    await message.answer(_ru)
    await state.finish()
    await message.answer("–í—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –∑–∞—è–≤–∫—É?", reply_markup=tekshir_ru)


@dp.callback_query_handler(text="send_ru")
async def arizani_yuborish(call: CallbackQuery):
   
    await call.message.delete()
    await bot.send_message(GROUP_CHAT_ID, _ru)

    await call.message.answer("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n‚òéÔ∏è–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è", reply_markup=main_menu_ru)
    await call.answer(cache_time=30)
    await call.answer()


@dp.callback_query_handler(text="wrong_ru")
async def arizani_bekor_qilish(call: CallbackQuery):
    await call.message.delete()
    await call.message.answer("‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!", reply_markup=main_menu_ru)
    await call.answer(cache_time=30)
    await call.answer()

@dp.message_handler(text ='üì© –ö–æ–Ω—Ç–∞–∫—Ç—ã')
async def bot_start(message: types.Message):
    await message.answer("–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —à–∫–æ–ª–æ–π SATashkent:\n\nüìû +998919253036\n\n<a href='https://t.me/satashkent_admin'>Telegram</a>")


@dp.message_handler(text ='üìç –ù–∞—à –∞–¥—Ä–µ—Å')
async def bot_start(message: types.Message):
    await message.answer("Location: M Shahriston, ICT Academy\nContact : +998919253036")
    await message.answer_location(latitude=41.35426269309694, longitude=69.28861938201761)

@dp.message_handler(text ='üßæ –û –∫—É—Ä—Å–µ')
async def bot_start(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>SATashkent School!</b>\n\nüìå–£ –Ω–∞—Å –µ—Å—Ç—å 2 –≤–∏–¥–∞ –∫—É—Ä—Å–æ–≤ SAT:\n - Senior Course\n-  Junior Course\nSATashkent School –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–∞–∂–¥–æ–º—É —Å—Ç—É–¥–µ–Ω—Ç—É:\n\n ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ Support Teacher \n ‚Ä¢ 6 –¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π –≤ –Ω–µ–¥–µ–ª—é \n‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 12 —É—á–µ–Ω–∏–∫–æ–≤ –≤ –∫–ª–∞—Å—Å–µ  \n ‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –ø–æ–¥–∞—á–µ –∑–∞—è–≤–ª–µ–Ω–∏—è –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É\n‚Ä¢ –ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥ —Å –≤—ã–ø—É—Å–∫–Ω–∏–∫–∞–º–∏! \n‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π (—Å –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–æ–º) \n\n–í—Å–µ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ!üòç  ")



@dp.message_handler(text ='üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏')
async def bot_start(message: types.Message):
    await message.answer("""Good day to everybody!

‚ÄºÔ∏èWelcome to the SAT|English materials channel with no limits. All new|old English books, subjects, and other resources may be found here. This channel was created under the @satashkent School

üìåThis channel's goal is to assist people in improving their SAT scores and enrolling in world-class institutions. We want that even the children of those who live on the edges of Uzbekistan have unlimited access to materials. This channel is made only for humans!

1.0 Reading Comprehension Materials
1.2 Literature Reading Materials 

<a href="https://t.me/c/1778480012/564">9-10 Class</a>
<a href="https://t.me/c/1778480012/625">11-12 Class</a> 
1.3 Science Reading Materials 
<a href = "https://t.me/c/1778480012/674">9-10 Class</a>
<a href = "https://t.me/c/1778480012/687">11-12 Class</a> 
1.4 Social Science Reading Materials
<a href = "https://t.me/c/1778480012/702">9-10 Class</a>
<a href = "https://t.me/c/1778480012/711" >11-12 Class</a> 

1.5 Great Global Conversations (History)
<a href = "https://t.me/c/1778480012/735">All here</a>

1.6 Founding Documents (History&Science
<a href = "https://t.me/c/1778480012/725">9-10 Class</a>
<a href = "https://t.me/c/1778480012/731">11-12 Class</a>

2.0 Magazines
<a href = "https://t.me/c/1778480012/910">2.1 New Scientist</a>
<a href = "https://t.me/c/1778480012/836">2.3 National Geographic</a>
<a href = "https://t.me/c/1778480012/897">2.4 Scientific American</a>
<a href = "https://t.me/c/1778480012/910">2.5 The Atlantic</a>
<a href = "https://t.me/c/1778480012/784">2.6 The Economist</a>
<a href = "https://t.me/c/1778480012/979" >2.7 Time Magazine</a>
<a href = "https://t.me/c/1778480012/1000">2.8 The Wall Street Journal</a>

<a href = "https://t.me/c/1778480012/1114">3.0 SAT Full Books</a>

4.0 SAT section Based Books
<a href = "https://t.me/c/1778480012/1027">Writing</a>
<a href = "https://t.me/c/1778480012/1065">Math</a>
<a href = "https://t.me/c/1778480012/1089">Reading</a>

<a href = "https://t.me/c/1778480012/1007">5.0 SAT Vocabulary Books</a>

6.0 SAT Practise Tests
<a href = "https://t.me/c/1778480012/1127">Official College Board 10 Tests</a>
<a href = "https://t.me/c/1778480012/1124">Real SAT exam tests from 2017- 2021</a>

7.0 Others

‚ùïTo make it easy to follow, you can use map above!

üìïNew updates will be added throughout the development of this channel. Now, you can get what is here!

‚ÄºÔ∏èRemember, all the information, documents, books must be used for educational purposes. All the information, books, documents that are widely available in Google. 

üìÇSource of many materials: Google.com and <a href = "https://t.me/SAT_FILES">SAT Files</a>

Link to join: https://t.me/+QeAkLfpPBd9jZGRi

<a href = "https://t.me/satashkent">SATashkent School!</a>""")